<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>多线程 on 我爱ETF</title><link>http://52etf.net/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link><description>Recent content in 多线程 on 我爱ETF</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 01 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="http://52etf.net/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>PyQt开发笔记（三）多线程</title><link>http://52etf.net/blog/2020-06-01-pyqt%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%E4%B8%89%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link><pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate><guid>http://52etf.net/blog/2020-06-01-pyqt%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%E4%B8%89%E5%A4%9A%E7%BA%BF%E7%A8%8B/</guid><description>主进程 每一个Qt程序被创建时，默认有一个主线程，启动无限循环，并监控Signal。 我们看到的打开窗口 、点按钮、关闭窗口就是主线程的功劳。 from PySide2.QtWidgets import QApplication, QMainWindow app = QApplication(sys.argv) #主线程Application window = MainWindow() # 窗口 window.show() sys.exit(app.exec_()) 但</description></item><item><title>PyQt开发笔记（四）通用的Worker</title><link>http://52etf.net/blog/2020-06-01-pyqt%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%E5%9B%9B%E9%80%9A%E7%94%A8worker/</link><pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate><guid>http://52etf.net/blog/2020-06-01-pyqt%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%E5%9B%9B%E9%80%9A%E7%94%A8worker/</guid><description>线程通信 概念很大，但比较容易理解。 GUI程序的核心在于交互，界面上的元素互动交互，例如鼠标移动，打飞机游戏跟着滚动，其他物品躲避。 其次是用户和界面直接的交互，比如输入一些信息、点击按钮。 这些交互被封装</description></item></channel></rss>